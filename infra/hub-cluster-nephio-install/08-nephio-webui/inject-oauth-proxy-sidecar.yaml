apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: inject-sidecar-to-depl
  annotations:
    config.kubernetes.io/local-config: "true"
    internal.kpt.dev/upstream-identifier: fn.kpt.dev|StarlarkRun|default|inject-sidecar-to-depl
source: |-
  def ensure_inject_sidecar_to_depl(r):
    if r["apiVersion"] == "apps/v1" and r["kind"] == "Deployment":
      containers = r["spec"]["template"]["spec"]["containers"]
      for container in containers:
        if container["name"] == "oauth-proxy":
          return
      sidecar = {
        "name": "oauth-proxy",
        "securityContext": {
          "capabilities": {
            "drop": [
              "MKNOD"
            ]
          }
        },
        "ports": [
          {
            "name": "oauth-proxy",
            "containerPort": 8443,
            "protocol": "TCP"
          }
        ],
        "imagePullPolicy": "IfNotPresent",
        "volumeMounts": [
          {
            "name": "nephio-tls",
            "mountPath": "/etc/tls/private"
          }
        ],
        "image": "registry.redhat.io/openshift4/ose-oauth-proxy:v4.12",
        "args": [
          "-provider=openshift",
          "-https-address=:8443",
          "-http-address=",
          "-email-domain=*",
          "-upstream=http://localhost:7007",
          "-tls-cert=/etc/tls/private/tls.crt",
          "-tls-key=/etc/tls/private/tls.key",
          "-cookie-secret=\"KVgwiyRNt_deA_shUsVgoQ==\"",
          "-openshift-service-account=nephio-webui-sa",
          "-skip-auth-regex=^/metrics",
          "-skip-provider-button",
          "-request-logging=true"
        ]
      }
      containers.append(sidecar)

  for resource in ctx.resource_list["items"]:
    ensure_inject_sidecar_to_depl(resource)
